pipeline {
    agent any

    environment {
        CHATBOT_FACEBOOK_CREDENTIALS_TEST=credentials('chatbot-facebook-credentials-test')
        CHATBOT_API_CREDENTIALS_TEST=credentials('chatbot-api-credentials-test')
    }

    stages {
        stage('Configure') {
            steps {
                sh 'cat "${CHATBOT_FACEBOOK_CREDENTIALS_TEST}" > fb_credentials.yml'
                sh 'cat "${CHATBOT_API_CREDENTIALS_TEST}" > api_credentials.txt'
            }
        }
        stage('Build') {
            steps {
               sh 'docker build --tag chatbot:$BUILD_ID --rm --force-rm .'
               sh 'docker save --output chatbot-$BUILD_ID.tar chatbot:$BUILD_ID'
            }
        }
        stage('Deploy') {
            steps {
                sshagent(['jenkins-ssh-key']) {
                    sh 'scp -o StrictHostKeyChecking=no chatbot-$BUILD_ID.tar 63.33.73.203:/var/chatbot/chatbot-$BUILD_ID.tar'
                    sh 'ssh -o StrictHostKeyChecking=no 63.33.73.203 "docker load --input /var/chatbot/chatbot-$BUILD_ID.tar"'
                    sh 'ssh -o StrictHostKeyChecking=no 63.33.73.203 "rm -rf /var/chatbot/chatbot-$BUILD_ID.tar"'
                    sh 'ssh -o StrictHostKeyChecking=no 63.33.73.203 "docker tag chatbot:$BUILD_ID chatbot:latest"'
                    sh 'ssh -o StrictHostKeyChecking=no 63.33.73.203 "docker stop chatbot || true"'
                    sh 'ssh -o StrictHostKeyChecking=no 63.33.73.203 "docker run --detach --restart unless-stopped --publish 1001:5002 --name chatbot chatbot:latest"'
                }
            }
        }
    }
    post { 
        always { 
            sh 'rm -rf chatbot-$BUILD_ID.tar'
            sh 'docker rmi chatbot:$BUILD_ID || true'
        }
    }
}
